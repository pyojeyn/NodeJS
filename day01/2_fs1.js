const fs = require('fs'); //require('모듈명') : Node.js에서 모듈을 불러오는 메소드!

//비동기식으로 읽음
fs.readFile('text1.txt', 'utf-8' , (err,data) => {
    if(err){ //에러가 났다면 
        console.log(err); //콘솔에다 에러찍음
    }else{ //에러나지 않았다면
        console.log(`비동기식으로 읽음 : ${data}`);  //data : text1.txt 에 적혀있는 내용들
    }
});

// 동기식으로 읽음
const text1 = fs.readFileSync('text1.txt','utf-8'); // 동기식은 콜백함수 안들어감!! 읽은 내용 text1에다 집어넣어줌
console.log(`동기식으로 읽음 ${text1}`);



// 비동기는 콜백함수가 있고 동기식은 콜백함수가 없다. 
// 이유 : 비동기식 파일읽어드리는데 시간 걸림. 그럼 다음으로 넘어가고 진행되다가 돌아가야되는데 돌아갈곳이 필요한데 그 콜백함수로 돌아가게 해줘야한다!
// 결론 : 떠낫다가 돌아갈곳 만들어주기 위해서 ㅋㅋ 그 돌아갈곳(콜백함수)에서 결과 처리 에러출력하던 데이터 출력하던 ㅇㅇ

// 비동기, 동기 지금 두개 해놨는데 콘솔에 출력해보면 밑에서 알수 있듯이 동기식부터 출력됨. ↓ text1파일 읽는데 시간걸리니까 바로 밑에 있는 동기로 먼저 넘어간거임 
/*
동기식으로 읽음 파일 테스트입니다.
오늘은 9월 9일
다음주는 추석인가요 ?
다다음주인가요 ?
졸령

[2_fs1.js에서 사용할거임 !!]
비동기식으로 읽음 : 파일 테스트입니다.
오늘은 9월 9일
다음주는 추석인가요 ?
다다음주인가요 ?
졸령

[2_fs1.js에서 사용할거임 !!]
*/ 






//==================================================================================================================================
//require이 자동완성이 안되는 이유! 우리는 설치한 extention이 부족하다 그래서 JavaScript(ES6) code snippets를 설치하자! 
//리액트나 뷰도 6에 맞춰져 있다.  

//fs.readFile('파일명', '인코딩방법', 콜백함수(에러가나던지,데이터가 잘 들어오던지)) 자바스크립트에서 콜백함수는 화살표함수로 쓰기 가능 ~~


// cmd에다 node 2_fs1.js 라고 치면 
// text1.txt 내용 출력됨 ↓
/*
비동기식으로 읽음 : 파일 테스트입니다.
오늘은 9월 9일
다음주는 추석인가요 ?
다다음주인가요 ?
졸령

[2_fs1.js에서 사용할거임 !!]
*/